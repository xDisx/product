plugins {
    id 'java'
    id "org.sonarqube" version "4.4.1.3373"
    id 'jacoco'
}

jacoco {
    toolVersion = '0.8.9'
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, excludes: ['**/ProductApplication.class', '**/config/', '**/test/**'])
        }))
    }
}

sonar {
    properties {
        property "sonar.projectKey", "xDisx_product"
        property "sonar.organization", "xdisx"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.binaries", "build/classes/java/main"
        property "sonar.java.test.binaries", "build/classes/java/test"
        property "sonar.jacoco.reportPaths", "build/jacoco/test.exec"
        property "sonar.exclusions", "**/config/**, **/test/**, **/*Properties.java, **/*Application.java, **/ApplicationContext.java, **/e2e/**"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

jar {
    enabled = false
}

bootJar {
    enabled = true
}

dependencies {
    implementation project(':product-api')
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.5'
    implementation 'org.flywaydb:flyway-core:10.11.1'
    implementation 'org.flywaydb:flyway-database-postgresql:10.11.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.5'


    testImplementation 'software.amazon.awssdk:utils:2.25.40'

    runtimeOnly('org.postgresql:postgresql:42.7.3')
}